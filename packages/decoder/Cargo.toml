# @webtoon/psd
# Copyright 2021-present NAVER WEBTOON
# MIT License

# Based on the following templates:
# - https://github.com/rustwasm/wasm-pack-template/blob/master/Cargo.toml
# - https://github.com/rustwasm/rust-webpack-template/blob/master/template/Cargo.toml

[package]
edition = "2021"
name = "webtoon-psd-decoder"
version = "0.1.0"

[lib]
crate-type = [
  "cdylib",
  "rlib",   # rlib is needed only for running `wasm-pack test`
]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.87"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
web-sys = { version = "0.3.64", features = ["console"] }

[dev-dependencies]
wasm-bindgen-test = "0.3.37"

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true
